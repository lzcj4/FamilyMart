<UserControl x:Class="FileExplorer.UCTree"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControl="clr-namespace:FileExplorer.UC"
    xmlns:self="clr-namespace:FileExplorer"
    xmlns:model="clr-namespace:FileExplorer.Model"
    Background="Transparent">

  <UserControl.Resources>

    <!--<Style TargetType="TreeViewItem">
      <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}" />
      <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}" />
    </Style>-->

    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>

    <Style x:Key="TreeViewItemFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
      <Setter Property="Focusable" Value="False"/>
      <Setter Property="Width" Value="16"/>
      <Setter Property="Height" Value="16"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
              <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                <Path.RenderTransform>
                  <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                </Path.RenderTransform>
              </Path>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsChecked" Value="True">
                <Setter Property="RenderTransform" TargetName="ExpandPath">
                  <Setter.Value>
                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                  </Setter.Value>
                </Setter>
                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
              </Trigger>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsMouseOver" Value="True"/>
                  <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
              </MultiTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
      <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}" />
      <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}" />

      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="1,0,0,0"/>
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TreeViewItem}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="19" Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}"/>
              <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                      Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>
              <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="false">
                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
              </Trigger>
              <Trigger Property="HasItems" Value="false">
                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
              </Trigger>
              <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
              </Trigger>
              <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="true"/>
                  <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
              </MultiTrigger>-->
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <!--<Style.Triggers>
        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
          <Setter Property="ItemsPanel">
            <Setter.Value>
              <ItemsPanelTemplate>
                <VirtualizingStackPanel/>
              </ItemsPanelTemplate>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>-->
    </Style>


  </UserControl.Resources>

  <TreeView  Name="treeExplorer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
             BorderBrush="Transparent"  Background="Transparent"
             ItemsSource="{Binding Items}"
             TreeViewItem.Expanded="TreeViewItem_Expanded"
             TreeViewItem.PreviewKeyDown="TreeViewItem_PreviewKeyDown"
             SelectedItemChanged = "treeExplorer_SelectedItemChanged">
    <TreeView.Resources>
      <!-- Below two styles for removing treeview scroll bar context menu-->
      <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}">
        <Setter Property="ContextMenu" Value="{x:Null}"/>
      </Style>

      <Style TargetType="{x:Type  ScrollViewer}"/>
    </TreeView.Resources>

    <TreeView.ItemTemplate>

      <HierarchicalDataTemplate ItemsSource="{Binding Folders}"  DataType="{x:Type model:IFolder}">

        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2,0,4,0">
          <customControl:ImageAnim Name="imageAnimation" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Source="./Resource/Indicator_small.gif" Width="15" Height="15" Margin="2,0"
                                   Visibility="{Binding IsLoading, Converter={StaticResource booleanToVisibilityConverter}}" />

          <CheckBox   IsEnabled="{Binding Path=IsEnabled}" IsChecked="{Binding IsChecked,Mode=TwoWay}"
                      Visibility="{Binding IsCheckVisible, Converter={StaticResource booleanToVisibilityConverter}}">
            <CheckBox.Resources>
              <Style TargetType="CheckBox" BasedOn="{StaticResource Ux_checkBoxStyle}">
                <Style.Triggers>
                  <Trigger Property="IsEnabled"  Value="False">
                    <Setter Property="Opacity" Value=".5" />
                    <Setter Property="Background" Value="#808080" />
                    <Setter Property="Foreground" Value="#808080" />
                  </Trigger>
                </Style.Triggers>
              </Style>
            </CheckBox.Resources>
          </CheckBox>

          <Image Margin="2" Source="{Binding Icon}" Width="16" Height="16"/>
          <TextBlock Text="{Binding Title}" Margin="2" FontSize="12" VerticalAlignment="Center" />
        </StackPanel>

      </HierarchicalDataTemplate>

    </TreeView.ItemTemplate>

  </TreeView>

</UserControl>
